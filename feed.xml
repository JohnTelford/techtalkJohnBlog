<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="/techtalkJohnBlog/feed.xml" rel="self" type="application/atom+xml" /><link href="/techtalkJohnBlog/" rel="alternate" type="text/html" /><updated>2020-09-09T19:53:46-05:00</updated><id>/techtalkJohnBlog/feed.xml</id><title type="html">Tech Talk Blog</title><subtitle>An Opinionated Tech Talk Blog</subtitle><entry><title type="html">Fastpages</title><link href="/techtalkJohnBlog/blog/vscode/git/github/fastpages/github%20pages/2020/09/09/Fastpages.html" rel="alternate" type="text/html" title="Fastpages" /><published>2020-09-09T00:00:00-05:00</published><updated>2020-09-09T00:00:00-05:00</updated><id>/techtalkJohnBlog/blog/vscode/git/github/fastpages/github%20pages/2020/09/09/Fastpages</id><content type="html" xml:base="/techtalkJohnBlog/blog/vscode/git/github/fastpages/github%20pages/2020/09/09/Fastpages.html">&lt;!-- /techtalkJohnBlog --&gt;

&lt;p&gt;Updated:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Warning: Work in Progress!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;This is an opinionated technology blog about technologies of interest to me&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Since the early days of the Internet, I have built  blogs from scratch or used   blog technology du jour. This blog is built using &lt;a href=&quot;https://fastpages.fast.ai&quot;&gt;fastpages&lt;/a&gt;, a tool in &lt;a href=&quot;https://www.fast.ai/&quot;&gt;fast.ai&lt;/a&gt;’s tool kit&lt;/p&gt;

&lt;p&gt;How fitting.  The first blog post is about the blog&lt;/p&gt;

&lt;h2 id=&quot;synopsis&quot;&gt;Synopsis&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;em&gt;fastpages&lt;/em&gt; is not plug and play&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It requires:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Experience using &lt;em&gt;git&lt;/em&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Experience using &lt;em&gt;GitHub&lt;/em&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The documentation is a guide, not step by step&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My experience installing and using &lt;em&gt;fastpages&lt;/em&gt; was worth while. I have learned things too&lt;/p&gt;

&lt;h2 id=&quot;git&quot;&gt;Git&lt;/h2&gt;

&lt;!-- 
## Git, GitHub, GitHub Pages, GitHub Actions
 --&gt;

&lt;p&gt;&lt;em&gt;Git&lt;/em&gt;, &lt;em&gt;GitHub&lt;/em&gt;, and &lt;em&gt;GitHub Pages&lt;/em&gt; are integral to &lt;em&gt;fastpages&lt;/em&gt;. It relies on &lt;em&gt;git&lt;/em&gt; to  push file changes to the blog &lt;em&gt;GitHub&lt;/em&gt;  repository , &lt;em&gt;GitHub Pages&lt;/em&gt; to compile and deploy the blog, and  &lt;em&gt;GitHub Actions&lt;/em&gt;  for  blog creation  automation&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://git-scm.com&quot;&gt;Git&lt;/a&gt; is a key structural component. It is a distributed version control system designed to track project file changes. It helps answering the questions: Who Changed What, Where, When, and Why? &lt;em&gt;Git&lt;/em&gt; is responsible for everything &lt;em&gt;GitHub&lt;/em&gt;-related that happens  on the local computer.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt; is an online platform for hosting  versions of most  type of files.  &lt;em&gt;GitHub&lt;/em&gt; is a platform for storing files in a remote repository that is a unified source of truth&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pages.github.com&quot;&gt;Git Hub Pages&lt;/a&gt; creates and deploys public web pages&lt;/p&gt;

&lt;h3 id=&quot;some-helpful-resources&quot;&gt;Some Helpful Resources&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.github.com/en/github/getting-started-with-github/set-up-git&quot;&gt;Set up Git&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.github.com/en/github/getting-started-with-github&quot;&gt;Getting started with GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.to/educative/git-and-github-in-a-nutshell-definitive-tutorial-for-beginners-2i05&quot;&gt;Git and GitHub in a Nutshell: &lt;/a&gt; Definitive tutorial for beginners&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jmcglone.com/guides/github-pages/&quot;&gt;Creating and Hosting a Personal Site on GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;from-edits-to-web-blog&quot;&gt;From Edits to Web Blog&lt;/h1&gt;

&lt;!-- 
The diagram illustrates  creating blog posts from editing to deploying blogs

&lt;img  src=&quot;/techtalkJohnBlog/images/Fastpages.png&quot; /&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;
    &lt;em&gt;A Process for Creating Fastpages Posts&lt;/em&gt;
&lt;/p&gt;
 --&gt;

&lt;p&gt;&lt;img src=&quot;/techtalkJohnBlog/images/Fastpages.png&quot; alt=&quot;&quot; title=&quot;A Process for Creating Fastpages Blog Posts&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;fastpages-posts&quot;&gt;Fastpages Posts&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://fastpages.fast.ai&quot;&gt;Fastpages&lt;/a&gt; supports creating blog post using &lt;a href=&quot;https://fastpages.fast.ai&quot;&gt;Jupyter Notebooks&lt;/a&gt;,  &lt;a href=&quot;https://guides.github.com/features/mastering-markdown/&quot;&gt;Markdown&lt;/a&gt;, and Microsoft Word&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Fastpages&lt;/em&gt; uses &lt;a href=&quot;https://pages.github.com&quot;&gt;GitHub Pages&lt;/a&gt; to create and deploy blogs. It uses &lt;a href=&quot;https://github.github.com/gfm&quot;&gt;GitHub Flavored Markdown&lt;/a&gt; for  editing blog post text. &lt;em&gt;Fastpages&lt;/em&gt; can be configured to use &lt;a href=&quot;https://kramdown.gettalong.org/syntax.html#images&quot;&gt;kramdown&lt;/a&gt;. It adds features  other markdown dialects may not have, like commenting out lines of markdown, and supporting embedding HTML&lt;/p&gt;

&lt;h2 id=&quot;vscode&quot;&gt;VScode&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://code.visualstudio.com&quot;&gt;VScode&lt;/a&gt; is  my go-to editor for blog command and control,  text editing, and interfacing with &lt;em&gt;git&lt;/em&gt; and &lt;em&gt;GitHub&lt;/em&gt;.    &lt;em&gt;VScode&lt;/em&gt; extensions provides viewing &lt;em&gt;GitHub&lt;/em&gt; markdown blog posts while editing,   editing several  blog posts on different &lt;em&gt;git&lt;/em&gt; branches, and quickly viewing  blog changes  a browser.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=bierner.github-markdown-preview&quot;&gt;Github Markdown Preview&lt;/a&gt; extension pack is  convenient  for  previewing  &lt;em&gt;GitHub&lt;/em&gt; markdown blog posts while editing&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;VScode&lt;/em&gt; &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-docker&quot;&gt;Docker Etension&lt;/a&gt; uses &lt;a href=&quot;https://www.docker.com&quot;&gt;Docker&lt;/a&gt;.  It  enables  previewing the  entire &lt;em&gt;fastpages&lt;/em&gt; blog of any &lt;em&gt;git&lt;/em&gt; branch without a &lt;em&gt;git push&lt;/em&gt;. This is a much faster and safer way to view the  blog while writing   posts, without disturbing the the blog public view.  One can edit  several  blog posts in different &lt;em&gt;git&lt;/em&gt; branches, and quickly review   them. This is possible because the extension has a web server. When a  blog post is ready for public view, merge the  &lt;em&gt;git&lt;/em&gt; branch with the master branch,  and push it to the &lt;em&gt;GitHub&lt;/em&gt; Repository for  public viewing.&lt;/p&gt;

&lt;h2 id=&quot;local-repository&quot;&gt;Local Repository&lt;/h2&gt;

&lt;p&gt;The local repository contains a copy the &lt;em&gt;GitHub&lt;/em&gt; repository. Contents are edited using &lt;em&gt;VScode&lt;/em&gt;. The &lt;em&gt;GitHub&lt;/em&gt; repository is not directly modified. It is modified after edited files are saved, staged, a message is added, and pushed  to the &lt;em&gt;GitHub&lt;/em&gt; repository&lt;/p&gt;

&lt;p&gt;One can use the built-in &lt;em&gt;VScode&lt;/em&gt; terminal to manually update the &lt;em&gt;GitHub&lt;/em&gt; repository with the modified files in the local repository.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git add
git commit -m &quot;message
git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;em&gt;git add&lt;/em&gt; command stages the edited  files&lt;br /&gt;
The &lt;em&gt;git commit -m “message”&lt;/em&gt; command adds the “why” message&lt;br /&gt;
The &lt;em&gt;git push&lt;/em&gt; command pushes the edited files to the &lt;em&gt;GitHub&lt;/em&gt; repository&lt;/p&gt;

&lt;p&gt;I prefer using the &lt;em&gt;VScode&lt;/em&gt; built-in &lt;em&gt;git&lt;/em&gt; interface.  It is quicker to &lt;em&gt;git push&lt;/em&gt; modified files. Microsoft owns both &lt;em&gt;GitHub&lt;/em&gt; and &lt;em&gt;VScode&lt;/em&gt;, so I think the odds are they work well together&lt;/p&gt;

&lt;p&gt;The local repository is modified with the &lt;em&gt;git pull&lt;/em&gt; command. It ensures the local repository is  up to date with the &lt;em&gt;GitHub&lt;/em&gt; repository&lt;/p&gt;

&lt;h2 id=&quot;github-chain&quot;&gt;GitHub Chain&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Fastpages&lt;/em&gt; relies on a cast of creative APIs and apps to compile and deploy blogs&lt;/p&gt;

&lt;p&gt;&lt;em&gt;GitHub Repository&lt;/em&gt; -&amp;gt; &lt;em&gt;Fastpages&lt;/em&gt; -&amp;gt; &lt;em&gt;GitHub Pages&lt;/em&gt; -&amp;gt; Deploy Blog&lt;/p&gt;

&lt;p&gt;&lt;em&gt;GitHub&lt;/em&gt; notifies &lt;em&gt;fastpages&lt;/em&gt; after a push from the local repository. &lt;em&gt;fastpages&lt;/em&gt; prepares the blog for &lt;em&gt;GitHub Pages&lt;/em&gt; to compile and deploy&lt;/p&gt;

&lt;!-- 
## GitHub Pages

- compose blogs on your computer and save it to your local GitHub repository blog repository

- save a copy to the local GitHub repository to the GitHub repository

- GitHub saves all versions of the changes to the repository

- information about who changed what, when, where, and why, is stored in repository 

- *fastpages*  automatically compiles  blog  posting from the repository

- the top of the blog post page has links to the blog About page, a search link for the entire blog,  a link to all blog tags, and a link to the blog home page

 - links to all blog postings are added to the blog home page, with post title, description, and date added to the blog

- clicking a blog posting link opens the posting

- a table of contents is 
shown for each section of the blog post 
 --&gt;</content><author><name>John Telford</name></author><summary type="html"></summary></entry></feed>